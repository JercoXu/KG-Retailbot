;; Auto-generated. Do not edit!


(when (boundp 'albert_decision_making::ActiveInferenceGoal)
  (if (not (find-package "ALBERT_DECISION_MAKING"))
    (make-package "ALBERT_DECISION_MAKING"))
  (shadow 'ActiveInferenceGoal (find-package "ALBERT_DECISION_MAKING")))
(unless (find-package "ALBERT_DECISION_MAKING::ACTIVEINFERENCEGOAL")
  (make-package "ALBERT_DECISION_MAKING::ACTIVEINFERENCEGOAL"))

(in-package "ROS")
;;//! \htmlinclude ActiveInferenceGoal.msg.html


(defclass albert_decision_making::ActiveInferenceGoal
  :super ros::object
  :slots (_state _product_id ))

(defmethod albert_decision_making::ActiveInferenceGoal
  (:init
   (&key
    ((:state __state) "")
    ((:product_id __product_id) "")
    )
   (send-super :init)
   (setq _state (string __state))
   (setq _product_id (string __product_id))
   self)
  (:state
   (&optional __state)
   (if __state (setq _state __state)) _state)
  (:product_id
   (&optional __product_id)
   (if __product_id (setq _product_id __product_id)) _product_id)
  (:serialization-length
   ()
   (+
    ;; string _state
    4 (length _state)
    ;; string _product_id
    4 (length _product_id)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _state
       (write-long (length _state) s) (princ _state s)
     ;; string _product_id
       (write-long (length _product_id) s) (princ _product_id s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _state
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _state (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _product_id
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _product_id (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get albert_decision_making::ActiveInferenceGoal :md5sum-) "4b01c6369ab93de108f2bbc20673afbd")
(setf (get albert_decision_making::ActiveInferenceGoal :datatype-) "albert_decision_making/ActiveInferenceGoal")
(setf (get albert_decision_making::ActiveInferenceGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string state
string product_id

")



(provide :albert_decision_making/ActiveInferenceGoal "4b01c6369ab93de108f2bbc20673afbd")


