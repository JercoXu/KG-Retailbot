;; Auto-generated. Do not edit!


(when (boundp 'albert_skills::LookForItemFeedback)
  (if (not (find-package "ALBERT_SKILLS"))
    (make-package "ALBERT_SKILLS"))
  (shadow 'LookForItemFeedback (find-package "ALBERT_SKILLS")))
(unless (find-package "ALBERT_SKILLS::LOOKFORITEMFEEDBACK")
  (make-package "ALBERT_SKILLS::LOOKFORITEMFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude LookForItemFeedback.msg.html


(defclass albert_skills::LookForItemFeedback
  :super ros::object
  :slots (_product_name ))

(defmethod albert_skills::LookForItemFeedback
  (:init
   (&key
    ((:product_name __product_name) "")
    )
   (send-super :init)
   (setq _product_name (string __product_name))
   self)
  (:product_name
   (&optional __product_name)
   (if __product_name (setq _product_name __product_name)) _product_name)
  (:serialization-length
   ()
   (+
    ;; string _product_name
    4 (length _product_name)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _product_name
       (write-long (length _product_name) s) (princ _product_name s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _product_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _product_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get albert_skills::LookForItemFeedback :md5sum-) "43c214cbd68be8e1dc94727572e25071")
(setf (get albert_skills::LookForItemFeedback :datatype-) "albert_skills/LookForItemFeedback")
(setf (get albert_skills::LookForItemFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#feedback
string product_name


")



(provide :albert_skills/LookForItemFeedback "43c214cbd68be8e1dc94727572e25071")


